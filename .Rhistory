b=4/3
b=4/3
as.integer(b)
class(b)
as.numeric(b)
is.integer(b)
is.numeric(b)
b=4/3
as.integer(b)
class(b)
as.numeric(b)
is.integer(b)
is.numeric(b)
b=4/3
as.integer(b)
class(b)
as.numeric(b)
is.integer(b)
is.numeric(b)
b=4/3
as.integer(b)
class(b)
as.numeric(b)
is.integer(b)
is.numeric(b)
#3
x<-1
x
y<-2
y
z=x>y
z
class(z)
#4
x<-"My SGPA"
x
x<-"My SGPA"
y<-"for the last semester"
z<-9.12
w<-c(x,y,z)
w
x<-"My SGPA"
y<-"for the last semester is"
z<-9.12
w<-c(x,y,z)
w
#1
x<-seq(1,37,3)
x
#2
y<-rep(5,10)
y
x<-c(1,5,2)
y<-c(3,7,9)
c(y,x)
c(y,4,3,2)
x<-c(1,5,2)
y<-c(3,7,9)
c(y,x)
c(y,4,3,2)
max(y)
min(x)
x=c(1,5,2)
y=c(3,7,9)
c(y,x)
c(y,4,3,2)
max(y)
min(x)
#4
x<-c(1, 5, 2, 3, 7, 6, 8 )
y<-x*2
y
z=1/x
z
w=log10(x)
w
#5
age<-(22, 27, 31, 41, 30, 25, 19, 20, 23, 35)
#5
age<-c(22, 27, 31, 41, 30, 25, 19, 20, 23, 35)
age[4]
age30<-age[age>30]
age30
tail(age,3)
length(age)
age[c(-1,-5)]
age2<-age[age>20 and age<25]
age2<-age[age>20 & age<25]
age2
age2=age[age>20&age<25]
age2
age2<-age[age>20 & age<25]
age2
#1
Rollno<-(1:4)
Firstname<-c(Ravi,Om,Ajay,Shiv)
Firstname<-(Ravi,Om,Ajay,Shiv)
Firstname<-c(Ravi,Om,Ajay,Shiv)
Firstname<-c("Ravi","Om","Ajay","Shiv")
Lastname<-("Dev","Gandhi","Pande","Rao")
Lastname<-c("Dev","Gandhi","Pande","Rao")
Subject<-c("AE","DS","ML","OS")
Marks<-(35,40,28,02)
Marks<-c(35,40,28,02)
Result<-c("P","P","P","F")
ls=list(Rollno,Firstname,Lastname,Subject,Marks,Result)
ls
print(ls)
#2
ls[1]
ls[2]
ls[3]
ls[4]
ls[5]
ls[6]
#3
class(Rollno)
class(Firstnam)
class(Firstname)
class(Lastname)
class(Subject)
class(Marks)
class(Result)
#4
Print(ls[[2]][1])
#4
(ls[[2]][1])
(ls[[4]][4])
(ls[5])
#5
ls[[5][2]]=45
#5
(ls[[5]][2])=45
#5
ls5[2]=45
#5
ls[5][2]=45
#5
ls[[5]][2]=45
ls
#6
ls[[4]][4]="OE"
ls
#7
Place<-c("Pune","Mumbai","Nashik","Nagpur")
ls=list(Rollno,Firstname,Lastname,Subject,Marks,Result,Place)
ls
#8
ls[[2]][5]="Juliee"
ls
#8
ls[[2]][5]="Julie"
ls
ls[[3]][5]="Gommes"
ls
ls[[5]][5]=30
ls[[5]][5]
ls
ls[[6]][5]="P"
ls
ls[[7]][5]="Hyderabad"
ls
#1
x<-list(n(2,3,5),c("aa","bb","cc","dd"),b(T,F,T,F))
#1
x<-list(c(2,3,5),c("aa","bb","cc","dd"),c(T,F,T,F))
x
#1
x<-list(n(2,3,5),s("aa","bb","cc","dd"),b(T,F,T,F))
x
x
#1
x<-list(c(2,3,5),c("aa","bb","cc","dd"),c(T,F,T,F))
x
#1
x<-list(c(2,3,5),c("aa","bb","cc","dd"),c(T,F,T,F),3)
x
x[[2]][1]
x[[2]][2]
x[[2]][3]
x[[2]][4]
x[[3]][1]
x[[3]][2]
x[[3]][3]
x[[3]][4]
x[[4]]
x[[2]][1]="tt"
x
#1
v<-c(5,0,3,1)
v`
w<-c(2,6,8,8)`
#1
v<-c(5,0,3,1)
w<-c(2,6,8,8)`
#1
v<-c(5,0,3,1)
w<-c(2,6,8,8)
x<-c(6,2,1,5)
y<-c(1,0,4,6)
m<-cbind(v,w,x,y)
m
print(m)
v<-c(5,0,3,1)
w<-c(2,6,8,8)
x<-c(6,2,1,5)
y<-c(1,0,4,6)
m<-cbind(v,w,x,y)
print(m)
m
matrix<-cbind(v,w,x,y)
matrix
#1
m<-matrix(c(5,0,3,1,2,6,8,8,6,2,1,5,1,0,4,6),3,3)
m
m<-matrix(c(5,0,3,1,2,6,8,8,6,2,1,5,1,0,4,6),3,3)
m
match_stat
#1
match_stat<-data.frame(name=c("Tendulkar","Ponting","Kallis","Dravid","Cook"),matches=c(200,168,166,164,161),innings=c(329,287,280,286,291),highestscore=c(248,257,224,270,294),avg=c(53.78,51.85,55.37,52.31,45.35))
match_stat
match_stat
match_stat<-data.frame(name=c("Tendulkar","Ponting","Kallis","Dravid","Cook"),matches=c(200,168,166,164,161),innings=c(329,287,280,286,291),highestscore=c(248,257,224,270,294),avg=c(53.78,51.85,55.37,52.31,45.35))
match_stat
match_stat<-data.frame(name=c("Tendulkar","Ponting","Kallis","Dravid","Cook"),matches=c(200,168,166,164,161),innings=c(329,287,280,286,291),highestscore=c(248,257,224,270,294),avg=c(53.78,51.85,55.37,52.31,45.35))
match_stat
x<-list(c(2,3,5),c("aa","bb","cc","dd"),c(T,F,T,F),3)
x
x[[2]][1]
x[[2]][2]
x[[2]][3]
x[[2]][4]
x<-c(1,5,2)
y<-c(3,7,9)
c(y,x)
c(y,4,3,2)
max(y)
min(x)
#3
x[[2]][1]="tt"
x
x[[2]][1]="tt"
x
x[[2]][1]="tt"
x
getwd()
match_stat<-data.frame(name=c("Tendulkar","Ponting","Kallis","Dravid","Cook"),matches=c(200,168,166,164,161),innings=c(329,287,280,286,291),highestscore=c(248,257,224,270,294),avg=c(53.78,51.85,55.37,52.31,45.35))
match_stat
getwd()
l<-10
m<-10
n<-2002
DOB<-c(l,m,n)
print(DOB)
match_stat<-data.frame(name=c("Tendulkar","Ponting","Kallis","Dravid","Cook"),matches=c(200,168,166,164,161),innings=c(329,287,280,286,291),highestscore=c(248,257,224,270,294),avg=c(53.78,51.85,55.37,52.31,45.35))
match_stat
match_stat<-data.frame(name=c("Tendulkar","Ponting","Kallis","Dravid","Cook"),matches=c(200,168,166,164,161),innings=c(329,287,280,286,291),highestscore=c(248,257,224,270,294),avg=c(53.78,51.85,55.37,52.31,45.35))
match_stat
a3<-c(5,0,3,1)
b3<-c(2,6,8,8)
c3<-c(6,2,1,5)
d3<-c(1,0,4,6)
A1<-matrix(c(a3,b3,c3,d3),4,4)
A1
a4<-c(7,1,9,5)
b4<-c(5,8,4,3)
c4<-c(8,2,3,7)
d4<-c(0,6,8,9)
B1<-matrix(c(a4,b4,c4,d4),4,4)
B1
a=c(5,2,6,1)
b=c(0,6,2,0)
c=c(3,8,1,4)
d=c(1,8,5,6)
A<-rbind(a,b,c,d)
A
a1=c(7,5,8,0)
b2=c(1,8,2,6)
c2=c(9,4,3,8)
d2=c(5,3,7,9)
B<-rbind(a1,b2,c2,d2)
B
max(A)
min(B)
c7=A[2,3]
c7
D=B[4,]
D
max(B[4,])
t(A)
solve(B)
getwd()
l<-10
m<-10
n<-2002
DOB<-c(l,m,n)
print(DOB)
#Exercise1
data <- read.csv('hair_eye_color_csv.csv')
data
#1
brownEyePeople <- which(data$Eye.Color=="Brown",arr.ind = T)
length(brownEyePeople)
#2
blondHairPeople <- which(data$Hair.Color=="Blonde",arr.ind = T)
length(blondHairPeople)
#3
brownHairBlackEyes <- which(data$Hair.Color=="Brown" & data$Eye.Color=="Black",arr.ind = T)
length(brownHairBlackEyes)
#4
greenEyes <- which(data$Eye.Color=="Green")
totalCount <- length(data$Person.No.)
greenEyesPercentage <- (length(greenEyes)/totalCount)*100
greenEyesPercentage
#5
redHairBlueEyes <- which(data$Hair&Color=="Red" & data$Eye&Color=="Blue")
length(redHairBlueEyes)
redHairBlueEyesPercentage <- ((length(redHairBlueEyes))/totalCount)*100
redHairBlueEyesPercentage
#Exercise3
seed_data <- read.csv('germination_csv.csv')
seed_data
#1
uncoveredGerminatedLvl4 <- which(seed_data$Box=="Uncovered" & seed_data$water_amt==4)
length(uncoveredGerminatedLvl4)
#2
median(seed_data$Box=="Covered")
#3
#Exercise4
#1
iris
boxplot(iris$Sepal.Length ~ iris$Sepal.Width,
iris,xlab = "Sepal Width",
ylab = "Sepal Length",
main="Box Plot for Sepal Length",
col=c("green","blue","red"))
plot(iris$Sepal.Length,
iris$Sepal.Width,
xlab = "Sepal Width",
ylab = "Sepal Length",
main = "Scatter Plot",
col=c("blue","green","red"))
hist(iris$Sepal.Length,
main=" Sepal Length frequency - Histogram",
xlab = "Sepal Length",
col="grey",
border = "red")
#2
library(dplyr)
# Creating a scatter plot
plot(x=iris$Sepal.Length, y=iris$Sepal.Width,
pch=19,cex=0.8,frame=FALSE,
xlab = "Sepal Length",ylab="Sepal Width")
#Create a boxplot
boxplot(iris$Sepal.Length ~ Species, data=iris,frame=FALSE,
xlab = "Sepal Length",ylab="Sepal Width",col="lightgray")
library(lattice)
#Scatter plot
xyplot(Sepal.Length ~ Petal.Length,
group = Species,
data=iris,
auto.key = TRUE,
pch=19,cex=0.5)
xyplot(Sepal.Length ~ Petal.Length | Species,
layout=c(3,1),
group = Species, data=iris,
type = c("p","smooth"),
scales="free")
#3
library(ggplot2)
ggplot(iris,aes(x=Sepal.Length, y=Sepal.Width))+geom_point()
ggplot(iris,aes(x=Sepal.Length, y=Sepal.Width))+geom_point(size=1.8,color="red",shape=17)
ggplot(iris,aes(x=Sepal.Length, y=Sepal.Width))+geom_point(aes(color=Species,shape=Species))
getwd()
data <- read.csv("travelled abroad data_csv.csv",header=TRUE)
data
attach(data)
##Que 1
pa<-(sum(Travelled.abroad=="Y")/length(Travelled.abroad))*100
cat("\n Probability of persons travelling abroad is",pa)
##Que 2
p<-pa
#a
a<-dbinom(0,10,0.56)
a
#b
b<-dbinom(1,10,0.56)
b
#c
c<-dbinom(2,10,0.56)
c
#d
d<-dbinom(3,10,0.56)
d
#e
e<-dbinom(4,10,0.56)
e
#f
f<-dbinom(5,10,0.56)
f
#g
g<-dbinom(6,10,0.56)
g
#h
h<-dbinom(7,10,0.56)
h
#i
i<-dbinom(8,10,0.56)
i
#j
j<-dbinom(9,10,0.56)
j
#k
k<-dbinom(10,10,0.56)
k
##Que 3
X<-c(a,b,c,d,e,f,g,h,i,j,k)
X<-signif(X,3)
X
dataf<-data.frame(k=0:10,Probability=X)
dataf
barplot(X,names.arg=c(0,1,2,3,4,5,6,7,8,9,10),col="Green",border="red",
main="Plot of probabilities ok K of n having travelled abroad",ylim = c(0,0.3))
p10_dbinom<-  dbinom(0:10,size=11,prob = 0.56)
x<-p10_dbinom
barplot(x,names.arg = c(0:10),space = 0,xlim = c(0,10),ylim = c(0,0.3))
lines((c(0:10)-.5),dnorm(c(0:10),5.6,sqrt(10*0.56*0.44)),type = "h",lwd=2,col="green")
curve(dnorm(c(x+.5),mean = 5.6,sd=sqrt(10*0.56*0.44)),from=1, to=10,xlim=c(1:10),add=T,col="red")
x<-0:10
y<-dbinom(x,10,0.56)
plot(x,y,type = "h",lwd=10,col="red")
##Que 4
X<-59:100
Y<-dbinom(x,100,0.56)
Y
plot(X,Y,type = "h",lwd=5,col="orange")
p59_binorm<-pbinom(58,100,0.56,lower.tail=FALSE)
p59_binorm
p59_binorm<-pnorm(59,56,sqrt(100*0.56*0.44),lower.tail = FALSE)
p59_binorm
install.packages("mclust")
library(mclust)
data(banknote)
BN <- banknote
head(BN)
tail(BN)
BN1 <- BN[-1]
head(BN1)
table(BN$Status)
install.packages("corrplot")
install.packages("RColorBrewer")
library(corrplot)
library(RColorBrewer)
corrplot.mixed(cor(BN1)
lower = "number",
upper = "circle",
tl.col = "black")
library(corrplot)
library(RColorBrewer)
corrplot.mixed(cor(BN1),
lower = "number",
upper = "circle",
tl.col = "black")
install.packages("caTools")
library(caTools)
set.seed(2018)
#N = nrow(BN)
#train <- sample(1:N,150,FALSE)
split = sample.split(BN, SplitRation = 0.75)
training_set = subset(BN, split == TRUE)
test_set = subset(BN, split == FALSE)
library(caTools)
set.seed(2018)
split = sample.split(BN, SplitRation = 0.75)
training_set = subset(BN, split == TRUE)
test_set = subset(BN, split == FALSE)
install.packages("C50")
install.packages("rpart")
install.packages("rpart.plot")
library(caTools)
set.seed(2018)
split = sample.split(BN, SplitRatio = 0.75)
training_set = subset(BN, split == TRUE)
test_set = subset(BN, split == FALSE)
library(c50)
library(rpart)
library(rpart.plot)
library(C50)
library(rpart)
library(rpart.plot)
fit <- rpart(Status~., data = training_set, method = 'class')
rpart.plot(fit, extra = "auto")
fit <- rpart(Status~., data = training_set, method = 'class')
rpart.plot(fit, extra = "auto")
fitc <- C5.0(Status ~., data = training_set)
fitc <- C5.0(Status ~., data = training_set)
plot(fitc)
library(C50)
library(rpart)
library(rpart.plot)
fit <- rpart(Status~., data = training_set, method = 'class')
rpart.plot(fit, extra = "auto")
fitc <- C5.0(Status ~., data = training_set)
plot(fitc)
setwd("D:/ISHAN/SY-2021-22/DS_CP/DS-CP")
knitr::opts_chunk$set(echo = TRUE)
BTC<-read.csv("bitcoin_dataset.csv")
library(caret)
BTC<-na.omit(BTC)
library(corrplot)
cor <- cor(BTC[,2:12])
corrplot(cor, method = "pie")
